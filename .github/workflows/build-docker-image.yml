on:
  push:
    branches:
      - main
      - develop
    paths:
      - backend/**
      - .github/workflows/build-docker-image.yml

name: backend Docker Build and Push

jobs:
    publish_nginx_docker_image:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to GitHub Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: ghcr.io/ProgrammingLab/backend-nginx
            tags: |
              type=ref,event=branch
              type=sha

        - name: Build and Push
          uses: docker/build-push-action@v6
          with:
            context: ./backend/nginx
            cache-from: type=gha
            cache-to: type=gha, mode=max
            push: true
            tags: ${{ steps.meta.outputs.tags }}
      
    publish_flask_docker_image:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Login to GitHub Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: ghcr.io/ProgrammingLab/backend-flask
            tags: |
              type=ref,event=branch
              type=sha

        - name: Build and Push
          uses: docker/build-push-action@v6
          with:
            context: ./backend
            cache-from: type=gha
            cache-to: type=gha, mode=max
            push: true
            tags: ${{ steps.meta.outputs.tags }}